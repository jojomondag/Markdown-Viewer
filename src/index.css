@config '../tailwind.config.js'; /* Corrected path relative to src/ */

/* Replace Tailwind directives with v4 import */
@import "tailwindcss";

/* Import Skeleton core ONLY */
@import "@skeletonlabs/skeleton"; 
/* @import "@skeletonlabs/skeleton/themes/theme-skeleton"; <-- Removed theme import */

/* Remove direct forms import (Tailwind v4 handles plugin styles) */
/* @import "@tailwindcss/forms"; */

/* Custom scrollbar styling */
/* For Webkit browsers (Chrome, Safari, Edge) */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background-color: rgba(156, 163, 175, 0.5); /* Gray with transparency */
  border-radius: 6px;
  border: 2px solid transparent;
  background-clip: content-box;
}

::-webkit-scrollbar-thumb:hover {
  background-color: rgba(156, 163, 175, 0.7);
}

/* For Firefox */
* {
  scrollbar-width: thin;
  scrollbar-color: rgba(156, 163, 175, 0.5) transparent;
}

/* Dark mode scrollbars */
.dark::-webkit-scrollbar-thumb {
  background-color: rgba(75, 85, 99, 0.5);
}

.dark::-webkit-scrollbar-thumb:hover {
  background-color: rgba(75, 85, 99, 0.7);
}

.dark * {
  scrollbar-color: rgba(75, 85, 99, 0.5) transparent;
}

html, body {
  margin: 0;
  padding: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  height: 100vh;
  width: 100vw;
  overflow: hidden;
}

#root {
  height: 100vh;
  display: flex;
  flex-direction: column;
}

/* Ensure the application container takes full height */
main {
  flex: 1;
  min-height: 0;
  display: flex;
  flex-direction: column;
}

/* Dark mode styles */
.dark body {
  /* @apply bg-surface-900 text-surface-100; */
  background-color: var(--color-surface-900);
  color: var(--color-surface-100);
}

.dark .markdown-preview {
  /* @apply bg-surface-800 text-surface-100 border-surface-700; */
  background-color: var(--color-surface-800);
  color: var(--color-surface-100);
  border-color: var(--color-surface-700);
}

.dark .markdown-preview pre {
  /* @apply bg-surface-900; */
  background-color: var(--color-surface-900);
}

/* Responsive styles */
@media (max-width: 768px) {
  /* Adjust gutters */
  .gutter {
    background-color: rgba(120, 120, 120, 0.2);
  }
  
  .gutter.gutter-horizontal {
    cursor: col-resize;
    height: 100%;
    width: 8px !important;
  }
  
  .gutter.gutter-vertical {
    cursor: row-resize;
    width: 100%;
    height: 8px !important;
  }
  
  /* Make sure the mobile preview is scrollable */
  .preview-container {
    max-height: 100%;
    overflow-y: auto;
  }
  
  /* Ensure the mobile floating buttons are visible */
  .fixed {
    z-index: 50;
  }
}

/* Override react-split styles for mobile */
@media (max-width: 768px) {
  .responsive-split {
    display: flex !important;
    flex-direction: column !important;
  }
  
  .responsive-split > .gutter {
    width: 100% !important;
    height: 8px !important;
    cursor: row-resize !important;
  }
  
  .responsive-split-vertical {
    flex-direction: column !important;
  }
  
  .responsive-split-vertical > .gutter {
    width: 100% !important;
    height: 8px !important;
  }
}

/* Ensure the mobile sidebar is scrollable */
.sidebar-mobile {
  overflow-y: auto !important;
  max-height: 100vh;
}

/* Accessibility styles */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/* High contrast focus styles */
:focus-visible {
  outline: 2px solid #0ea5e9; /* Or your preferred focus color */
  outline-offset: 2px;
}

/* Improves readability in high contrast mode */
@media (forced-colors: active) {
  * {
    border-color: currentColor;
  }
  
  button, 
  a, 
  .gutter {
    forced-color-adjust: none;
  }
  
  /* Ensure focus outlines are visible in high contrast mode */
  :focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

/* Reduce motion for users who prefer reduced motion */
@media (prefers-reduced-motion: reduce) {
  *, *::before, *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Improved keyboard navigation */
[tabindex]:not([tabindex="-1"]):focus,
a:focus,
button:focus,
input:focus,
select:focus,
textarea:focus {
  outline: 2px solid #0ea5e9;
  outline-offset: 2px;
}

/* Skip to content link when focused */
.skip-to-content {
  background: #0ea5e9;
  color: white;
  font-weight: bold;
  left: 50%;
  padding: 8px;
  position: absolute;
  transform: translateY(-100%);
  transition: transform 0.3s;
  z-index: 100;
}

.skip-to-content:focus {
  transform: translateY(0%);
}

/* Focus trap for modals - prevent background interaction when modal is open */
body.modal-open {
  overflow: hidden;
}

/* Add custom styles here */

/* Remove focus outline from tab buttons */
.editor-tabs button:focus,
.workspace-state-tabs button:focus {
  outline: none;
}

/* Add other custom styles below */ 

/* =========== DRAG-DROP STYLES FOR EDITOR TABS =========== */

/* Container styling */
.dnd-tabs-container {
  user-select: none; /* Prevent text selection during drag */
  position: relative; /* Create stacking context */
  z-index: 10; /* Ensure proper stacking */
}

/* Style for sortable tab */
.sortable-tab {
  cursor: grab;
  touch-action: none; /* Required for proper touch drag on mobile */
  will-change: transform; /* Optimize for animations */
  transition: transform 150ms ease, opacity 150ms ease;
  display: flex;
  align-items: center;
  position: relative; /* Create stacking context */
}

/* Style while dragging */
.sortable-tab[data-dragging="true"] {
  cursor: grabbing;
  opacity: 0.5;
  z-index: 999;
  pointer-events: none; /* Prevents issues with hover states during drag */
}

/* Ensure all elements in the tabs have proper pointer events */
.editor-tabs * {
  pointer-events: auto;
}

/* Make sure the tab content is not blocking drag events */
.sortable-tab > div {
  pointer-events: none; /* Allow drag events to pass through to the parent div */
}

/* But allow pointer events on the close button */
.sortable-tab > div > button {
  pointer-events: auto; /* Re-enable pointer events for the close button */
}

/* Override browser default drag behavior */
.editor-tabs [role="tab"] {
  -webkit-user-drag: none;
  user-drag: none;
}

/* Fix for Firefox which has issues with pointer-events */
@-moz-document url-prefix() {
  .sortable-tab {
    position: relative;
    z-index: 1;
  }
  
  .sortable-tab[data-dragging="true"] {
    z-index: 1000;
  }
} 